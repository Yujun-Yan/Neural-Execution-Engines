clear;
N = 256;
binary_size = 9;
data = (0:N)';
b_data = flip(de2bi(data, binary_size),2);
dir = "./";
add_path = "add_hold_emb.mat";
hold_path = 'holdout_number.mat';
load(dir+add_path);
load(dir+hold_path);
emb = double(emb);
data_emb_add = b_data*emb;
[coeff_holdout, score_holdout] = pca(data_emb_add);
red_marks = holdout;
black_marks = setdiff(data, red_marks);
c = cellstr(num2str(data));
c{end} = 'Inf';
dx = 0;
dy = 0;
dz = 0;
pos = -(2*mod(data,2)-1);
font_size = 15;
msize = 100;
figure;
scatter3(score_holdout(:,1), score_holdout(:,2), score_holdout(:,3), msize, 'b', 'filled');
hold on;
scatter3(score_holdout(red_marks+1,1), score_holdout(red_marks+1,2), score_holdout(red_marks+1,3), msize, 'red', 'filled');
text(score_holdout(black_marks+1,1), score_holdout(black_marks+1,2), score_holdout(black_marks+1,3), c(black_marks+1), 'Fontsize', font_size);
text(score_holdout(red_marks+1,1), score_holdout(red_marks+1,2), score_holdout(red_marks+1,3), c(red_marks+1), 'Fontsize', font_size, 'Color', 'red');
xlim([min(score_holdout(1:end-1,1))-dx, max(score_holdout(1:end-1,1))+dx]);
ylim([min(score_holdout(1:end-1,2))-dy, max(score_holdout(1:end-1,2))+dy]);
zlim([min(score_holdout(1:end-1,3))-dz, max(score_holdout(1:end-1,3))+dz]);